{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, EDIT_STREAM, DELETE_STREAM } from './types';\nimport streams from '../apis/streams';\nimport history from '../history'; //action creators\n\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post('/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n  history.push('/');\n};","map":{"version":3,"sources":["/Users/gregbarbosa/projects/streams/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","EDIT_STREAM","DELETE_STREAM","streams","history","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,YAA3C,EAAyDC,aAAzD,EAAwEC,WAAxE,EAAqFC,aAArF,QAAyG,SAAzG;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAEA;;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEX,OADH;AAEHY,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMa,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGL,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB;AAEAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAET,aAAR;AAAuBU,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AAEAb,EAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AAEH,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMP,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAY,UAAZ,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEP,aAAP;AAAsBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAMV,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAER,YAAR;AAAsBS,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACqB,KAAR,CAAe,YAAWF,EAAG,EAA7B,EAAgCX,UAAhC,CAAvB;AAEAC,EAAAA,QAAQ,CAAE;AAAEL,IAAAA,IAAI,EAAEN,WAAR;AAAqBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAF,CAAR;AAEAb,EAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACH,CANM;AAQP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMV,QAAN,IAAkB;AAClD,QAAMT,OAAO,CAACuB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAV,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEL,aAAP;AAAsBM,IAAAA,OAAO,EAAEc;AAA/B,GAAD,CAAR;AACAlB,EAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACH,CALM","sourcesContent":["import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, EDIT_STREAM, DELETE_STREAM} from './types';\nimport streams from '../apis/streams';\nimport history from '../history';\n\n//action creators\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\nexport const createStream = (formValues) => async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await streams.post('/streams', { ...formValues, userId});\n\n    dispatch({ type: CREATE_STREAM, payload: response.data }); \n\n    history.push('/');\n\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams');\n\n    dispatch({type: FETCH_STREAMS, payload: response.data});\n}\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch({ type: FETCH_STREAM, payload: response.data });\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.patch(`/streams/${id}`, formValues);\n\n    dispatch ({ type: EDIT_STREAM, payload: response.data });\n\n    history.push('/');\n}\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n\n    dispatch({type: DELETE_STREAM, payload: id});\n    history.push('/');\n};\n\n"]},"metadata":{},"sourceType":"module"}
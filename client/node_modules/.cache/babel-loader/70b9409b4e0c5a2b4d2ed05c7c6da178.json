{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gregbarbosa/projects/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button negative\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream';\n    } else {\n      return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Delete Stream\",\n        content: this.renderContent(),\n        actions: this.renderActions(),\n        onDismiss: () => history.push('/')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/gregbarbosa/projects/streams/client/src/components/streams/StreamDelete.js"],"names":["React","Modal","history","connect","fetchStream","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA0C;AAEtCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEAC,EAAAA,aAAa,GAAG;AACb,wBACI;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAMH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAsB;AAClB,aAAO,6CAAP;AACH,KAFD,MAGI;AACA,aAAQ,0DAAyD,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAM,EAAzF;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA,6BACH,QAAC,KAAD;AACA,QAAA,KAAK,EAAC,eADN;AAEA,QAAA,OAAO,EAAE,KAAKH,aAAL,EAFT;AAGA,QAAA,OAAO,EAAE,KAAKD,aAAL,EAHT;AAIA,QAAA,SAAS,EAAE,MAAMV,OAAO,CAACe,IAAR,CAAa,GAAb;AAJjB;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAQH;;AAjCqC;;AAkCzC;;AAED,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAIH,CALD;;AAOA,eAAeR,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,YAA3C,CAAf","sourcesContent":["import React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component{\n\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n     renderActions (){\n        return (\n            <>\n                <button className=\"ui button negative\">Delete</button>\n                <button className=\"ui button\">Cancel</button>\n            </>\n        );\n    }\n\n    renderContent() {\n        if(!this.props.stream){\n            return 'Are you sure you want to delete this stream'\n        }\n        else{\n            return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\n        }\n    }\n\n    render(){\n        return <div>\n            <Modal\n            title=\"Delete Stream\" \n            content={this.renderContent()}\n            actions={this.renderActions()}\n            onDismiss={() => history.push('/')}\n            />\n        </div>\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stream: state.streams[ownProps.match.params.id]\n    }\n\n}\n\nexport default connect(mapStateToProps, { fetchStream }) (StreamDelete);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gregbarbosa/projects/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\nimport { formValues } from 'redux-form';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {};\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit a Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        initialValues: {\n          title: 'Edit Me',\n          description: 'Change Me'\n        },\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/gregbarbosa/projects/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","formValues","StreamEdit","Component","onSubmit","componentDidMount","props","match","params","id","render","stream","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAuBC,UAAvB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAMrCC,QANqC,GAMzBH,UAAD,IAAgB,CAE1B,CARoC;AAAA;;AAErCI,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAMDC,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,aAAa,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,WAAW,EAAE;AAAhC,SAA3B;AAAyE,QAAA,QAAQ,EAAE,KAAKT;AAAxF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AApBoC;;AAsBxC;;AAED,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeZ,OAAO,CAACiB,eAAD,EAAiB;AAAEhB,EAAAA,WAAF;AAAcC,EAAAA;AAAd,CAAjB,CAAP,CAAoDG,UAApD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream , editStream} from '../../actions';\nimport StreamForm from './StreamForm';\nimport { formValues } from 'redux-form';\n\nclass StreamEdit extends React.Component {\n\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) => {\n\n    }\n\n    render(){\n        if(!this.props.stream){\n            return <div>Loading...</div>\n        }\n        return (\n            <div>\n                <h3>Edit a Stream</h3>\n                <StreamForm initialValues={{title: 'Edit Me', description: 'Change Me'}} onSubmit={this.onSubmit} />\n            </div>\n        );\n    }\n\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id]}\n};\n\nexport default connect(mapStateToProps,{ fetchStream,editStream })(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gregbarbosa/projects/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.video = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchStream(id);\n    flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${id}`\n    });\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    }\n\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: '99%'\n        },\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/gregbarbosa/projects/streams/client/src/components/streams/StreamShow.js"],"names":["React","flv","connect","fetchStream","StreamShow","Component","constructor","props","video","createRef","componentDidMount","id","match","params","createPlayer","type","url","render","stream","title","description","videoRef","width","mapStateToProps","state","ownProps","streams"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA2B,eAA3B;;AAGA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,gBAAaR,KAAK,CAACS,SAAN,EAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA;AAAD,QAAO,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAA9B;AACA,SAAKN,KAAL,CAAWJ,WAAX,CAAuBQ,EAAvB;AACAV,IAAAA,GAAG,CAACa,YAAJ,CAAiB;AACbC,MAAAA,IAAI,EAAE,KADO;AAEbC,MAAAA,GAAG,EAAG,8BAA6BL,EAAG;AAFzB,KAAjB;AAIH;;AAEDM,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKV,KAAL,CAAWW,MAAf,EAAsB;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAuB,KAAKb,KAAL,CAAWW,MAAxC;AACA,wBACI;AAAA,8BACI;AAAO,QAAA,GAAG,EAAE,KAAKG,QAAjB;AAA2B,QAAA,KAAK,EAAG;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAnC;AAAmD,QAAA,QAAQ;AAA3D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA7BoC;;AA8BxC;;AAED,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AACxC,SAAO;AAAEP,IAAAA,MAAM,EAAEM,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACb,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeT,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from 'react';\nimport flv from 'flv.js'\nimport { connect } from 'react-redux';\nimport{ fetchStream } from '../../actions';\n\n\nclass StreamShow extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.video = React.createRef();\n    }\n\n    componentDidMount(){\n        const {id} = this.props.match.params;\n        this.props.fetchStream(id);\n        flv.createPlayer({\n            type: 'flv',\n            url: `http://localhost:8000/live/${id}`\n        })\n    }\n\n    render(){\n        if(!this.props.stream){\n            return <div>Loading...</div>;\n        }\n        const {title, description} = this.props.stream;\n        return (\n            <div>\n                <video ref={this.videoRef} style={ {width: '99%'}} controls/>\n                <h1>{title}</h1>\n                <h5>{description}</h5>\n            </div>\n        );\n        \n    }\n};\n\nconst mapStateToProps = (state, ownProps) =>{\n    return { stream: state.streams[ownProps.match.params.id]};\n}\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);"]},"metadata":{},"sourceType":"module"}